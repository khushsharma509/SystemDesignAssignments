
-- Problem 1: Domain Constraints
-- a. CREATE TABLE statement for the Students table
CREATE TABLE Students (
    StudentID INT PRIMARY KEY,
    Name VARCHAR(50) NOT NULL,
    Age INT CHECK (Age BETWEEN 18 AND 25),
    Grade DECIMAL(3, 1) CHECK (Grade BETWEEN 0.0 AND 10.0)
);

-- b. Insert records that violate constraints
-- Inserting record with Age outside the allowed range
INSERT INTO Students (StudentID, Name, Age, Grade) VALUES (1, 'John Doe', 17, 8.5); -- Violates Age constraint

-- Inserting record with Grade outside the allowed range
INSERT INTO Students (StudentID, Name, Age, Grade) VALUES (2, 'Jane Smith', 20, 11.0); -- Violates Grade constraint

-- Problem 2: Entity Integrity Constraints
-- a. CREATE TABLE statement for the Courses table
CREATE TABLE Courses (
    CourseID INT PRIMARY KEY,
    CourseName VARCHAR(100),
    Credits INT NOT NULL
);

-- b. Insert record without specifying CourseID
INSERT INTO Courses (CourseName, Credits) VALUES ('Mathematics', 3); -- Entity integrity violation

-- Problem 3: Referential Integrity Constraints
-- a. CREATE TABLE statements for Products and Orders tables
CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100)
);

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    ProductID INT,
    OrderQuantity INT,
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- b. Insert record into Orders with non-existing ProductID
INSERT INTO Orders (OrderID, ProductID, OrderQuantity) VALUES (1, 999, 5); -- Violates referential integrity

-- c. Insert valid records
INSERT INTO Products (ProductID, ProductName) VALUES (1, 'Laptop');
INSERT INTO Orders (OrderID, ProductID, OrderQuantity) VALUES (2, 1, 3);

-- Problem 4: Key Constraints
-- a. CREATE TABLE statement for Employees table
CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    Email VARCHAR(100) UNIQUE,
    Name VARCHAR(100)
);

-- b. Insert two employees with the same Email
INSERT INTO Employees (EmployeeID, Email, Name) VALUES (1, 'employee@example.com', 'Alice'); -- Valid
INSERT INTO Employees (EmployeeID, Email, Name) VALUES (2, 'employee@example.com', 'Bob'); -- Violates UNIQUE constraint

-- c. Insert a record without specifying an Email
INSERT INTO Employees (EmployeeID, Name) VALUES (3, 'Charlie'); -- Allowed as Email can be NULL

-- Problem 5: Combination of Constraints
-- a. CREATE TABLE statements for Accounts and Transactions tables
CREATE TABLE Accounts (
    AccountID INT PRIMARY KEY,
    MobileNumber VARCHAR(10) CHECK (LENGTH(MobileNumber) = 10),
    Balance DECIMAL(10, 2) CHECK (Balance >= 0)
);

CREATE TABLE Transactions (
    TransactionID INT PRIMARY KEY,
    AccountID INT,
    TransactionAmount DECIMAL(10, 2) CHECK (TransactionAmount <> 0),
    FOREIGN KEY (AccountID) REFERENCES Accounts(AccountID)
);

-- b. Insert transaction for non-existing AccountID
INSERT INTO Transactions (TransactionID, AccountID, TransactionAmount) VALUES (1, 999, 100.0); -- Violates referential integrity

-- c. Insert valid records into both tables
INSERT INTO Accounts (AccountID, MobileNumber, Balance) VALUES (1, '1234567890', 5000.00);
INSERT INTO Transactions (TransactionID, AccountID, TransactionAmount) VALUES (2, 1, 1500.00);
